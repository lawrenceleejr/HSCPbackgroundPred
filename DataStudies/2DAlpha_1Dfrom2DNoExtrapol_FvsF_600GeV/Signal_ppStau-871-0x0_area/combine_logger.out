INFO: (function: improveOnce) CascadeMinimizer.cc: 188 -- Minimisation configured with Type=Minuit2, Algo=Migrad, strategy=0, tolerance=0.1
INFO: (function: improveOnce) CascadeMinimizer.cc: 211 -- Minimisation finished with status=0
INFO: (function: improveOnce) CascadeMinimizer.cc: 216 -- Minimization success! status=0
INFO: (function: generateAsimov) ToyMCSamplerOpt.cc: 139 -- Using internal logic for binned/unbinned Asimov dataset generation
INFO: (function: generateWithHisto) ToyMCSamplerOpt.cc: 214 -- Generating asimov with histogram for pdf pdf_binfail_LOW_obsOnly: in 45 x-bins
INFO: (function: generateWithHisto) ToyMCSamplerOpt.cc: 215 -- , in 1 y-bins
INFO: (function: generateAsimov) ToyMCSamplerOpt.cc: 139 -- Using internal logic for binned/unbinned Asimov dataset generation
INFO: (function: generateWithHisto) ToyMCSamplerOpt.cc: 214 -- Generating asimov with histogram for pdf pdf_binfail_SIG_obsOnly: in 5 x-bins
INFO: (function: generateWithHisto) ToyMCSamplerOpt.cc: 215 -- , in 1 y-bins
INFO: (function: generateAsimov) ToyMCSamplerOpt.cc: 139 -- Using internal logic for binned/unbinned Asimov dataset generation
INFO: (function: generateWithHisto) ToyMCSamplerOpt.cc: 214 -- Generating asimov with histogram for pdf pdf_binpass_LOW_obsOnly: in 45 x-bins
INFO: (function: generateWithHisto) ToyMCSamplerOpt.cc: 215 -- , in 1 y-bins
INFO: (function: generateAsimov) ToyMCSamplerOpt.cc: 139 -- Using internal logic for binned/unbinned Asimov dataset generation
INFO: (function: generateWithHisto) ToyMCSamplerOpt.cc: 214 -- Generating asimov with histogram for pdf pdf_binpass_SIG_obsOnly: in 5 x-bins
INFO: (function: generateWithHisto) ToyMCSamplerOpt.cc: 215 -- , in 1 y-bins
DEBUG: (function: runLimitExpected) AsymptoticLimits.cc: 423 -- Best fit of asimov dataset is at r = 19.999999 (1.000000 times rMax), while it should be at zero
INFO: (function: runLimitExpected) AsymptoticLimits.cc: 436 -- Median for expected limits = 0.000488281 (Sigma for expected limits = 0.000249128)
DEBUG: (function: findExpectedLimitFromCrossing) AsymptoticLimits.cc: 678 -- fail search for crossing of r between 0.000000 and 0.000488
INFO: (function: runLimit) AsymptoticLimits.cc: 193 -- NLL at global minimum of data = -354.035 (r=10.0733)
INFO: (function: runLimit) AsymptoticLimits.cc: 213 -- NLL at global minimum of asimov = -36.9632 (r=20)
INFO: (function: getCLs) AsymptoticLimits.cc: 343 -- At r = 46.429479:	q_mu = 396.95657	q_A  = 0.00000	CLsb = 0.00000	CLb  = 0.00000	CLs  = 0.00000
INFO: (function: getCLs) AsymptoticLimits.cc: 343 -- At r = 28.251408:	q_mu = 551.01964	q_A  = 0.00000	CLsb = 0.00000	CLb  = 0.00000	CLs  = 0.00000
INFO: (function: getCLs) AsymptoticLimits.cc: 343 -- At r = 19.162373:	q_mu = 682.30414	q_A  = 14.00291	CLsb = 0.00000	CLb  = 0.00000	CLs  = 0.00000
INFO: (function: getCLs) AsymptoticLimits.cc: 343 -- At r = 14.617855:	q_mu = 777.92987	q_A  = 109.21597	CLsb = 0.00000	CLb  = 0.00000	CLs  = 0.00000
INFO: (function: getCLs) AsymptoticLimits.cc: 343 -- At r = 12.345596:	q_mu = 838.92884	q_A  = 170.01463	CLsb = 0.00000	CLb  = 0.00000	CLs  = 0.00000
INFO: (function: getCLs) AsymptoticLimits.cc: 343 -- At r = 11.209467:	q_mu = 874.17120	q_A  = 205.15822	CLsb = 0.00000	CLb  = 0.00000	CLs  = 0.00000
INFO: (function: getCLs) AsymptoticLimits.cc: 343 -- At r = 10.641402:	q_mu = 893.26136	q_A  = 224.19930	CLsb = 0.00000	CLb  = 0.00000	CLs  = 0.00000
INFO: (function: getCLs) AsymptoticLimits.cc: 343 -- At r = 10.357370:	q_mu = 903.21967	q_A  = 234.13315	CLsb = 0.00000	CLb  = 0.00000	CLs  = 0.00000
INFO: (function: getCLs) AsymptoticLimits.cc: 343 -- At r = 10.215353:	q_mu = 908.30877	q_A  = 239.21003	CLsb = 0.00000	CLb  = 0.00000	CLs  = 0.00000
INFO: (function: getCLs) AsymptoticLimits.cc: 343 -- At r = 10.144345:	q_mu = 910.88169	q_A  = 241.77685	CLsb = 0.00000	CLb  = 0.00000	CLs  = 0.00000
INFO: (function: getCLs) AsymptoticLimits.cc: 343 -- At r = 10.108841:	q_mu = 912.17537	q_A  = 243.06748	CLsb = 0.00000	CLb  = 0.00000	CLs  = 0.00000
